Given an integer N.Create a string using only lowercase characters from a to z that follows the given rules.

When N is even:

Use N/2 characters from the beginning of a-z and N/2 characters from the ending of a-z.

When N is greater than 26,continue repeating the instructions until length of string becomes N.

When N is odd:

Case 1: If the sum of digits of N is even, Select (N+1)/2 characters from the beginning of a-z and (N-1)/2 characters from the ending of a-z.

Case 2: If the sum of digits of N is odd, Select (N-1)/2 characters from the beginning of a-z and (N+1)/2 characters from the ending of a-z.

When N is greater than 26,continue repeating the instructions until length of string becomes N.

 

Example 1:

Input: 
N=21
Output: 
abcdefghijpqrstuvwxyz
Explanation:
Since 21 is odd and sum of digits
of 21 is also odd,we take (21-1)/2=10 
characters from the beginning and 
(21+1)/2=11 characters from the 
end of a-z.
Example 2:

Input:
N=28 
Output: 
abcdefghijklmnopqrstuvwxyzaz
Explanation: 
Since 28>26, we keep repeating 
the process until length of string becomes 
28.
 

Your Task:
You don't need to read input or print anything. Your task is to complete the function BalancedString() which takes the integer N as input parameter and returns the string created using given procedures.
 

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)
 

Constraints:
1 <= N <= 105
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
A simple approach : 

This questions asks

for the final string

for different values of n.

 

obs 1: If n > 26 then we need to add "abcdefghijklmnopqrstuvwxyz".

Let 's suppose n is 55 then

 

we need to add this string 2 times making the length

to 26 + 26 = 52. Now, we are left with 55 - 52 = 3.

 

So, we can deduce that

if n > 26 then we can simply

append this string n / 26 times.Finally, left length

would be: n % 26

 

One other way to visualize it is:

 

  if n is a multiple of 26 then, answer will get filled

with this string only.

 

if n is of form 26 * m + 1 then, left length will be of l

length 1.

 

Similarly, we can observer that extra length would be

n % 26.

 

obs 2: Here, we have got 2 cases as given in the question.

 

From now on I will denote left_len as left length and

n as original n.

 

case 1:

  n is even:

  we have to take abc...upto left_len / 2 times and...xyz upto left_len / 2

times.One interesting thing to note here is that

for calculating

last left_len / 2 length string we can use

 

zyx....upto left_len / 2 times and reverse this string.

So, our final answer would be

 

n / 26 times "abcd....yz" + left_len / 2 length of "abcd.." + left_len / 2 length of "...xyz".

 

Here, since left_len < 26 so, we will never got any character that is

taken in first left_len / 2 length of "abcd..."

and last left_len / 2 length "..xyz".

 

case 2:

  n is odd :

      we have again 2 cases.First,

      let us calculate sum of digits of

          n.For this we will run a loop and add last digit to any variable

              sum and keep on dividing n by 10 until we get n as 0.

      One thing to note is that

      while calculating sum,
      we only consider original n

      not the left_len.

      eg : int sum = 0;

  while (n > 0)
  {

      int last_digit = n % 10;

      sum += last_digit;

      n /= 10;
  }

  if sum is odd : we need to append

                      n /
                  26 times "abcd.....xyz" +
      (left_len + 1) / 2 length of "abc..." + (left_len - 1) / 2 length of "..xyz"

                                                  if sum is even : we need to append

                                                                   n
                                                                   /
                                                                   26 times "abcd.....xyz" +
      (left_len - 1) / 2 length of "abc..." + (left_len + 1) / 2 length of "..xyz"

                                                  Now

                                                  let 's discuss how to code all the steps.

                                                  1. How to code n
                                                  / 26 times "abcde....xyz".

                                                    string full_string(int n)
  {

      // empty string

      strign ans = "";

      int cnt = n / 26;

      string total = "abcdefghijklmnopqrstuvwxyz";

      for (int i = 1; i <= cnt; i++)
      {

          ans += total;
      }

      return ans;
  }

  2. How to take first x lenght of "abcd...".

      string
      first_x_len(int x)
  {

      string ans = "";

      // run a loop from 0 to x-1 and add 'a'+i to answer

      for (int i = 0; i < x; i++)
      {

          ans.push_back('a' + i);
      }

      return ans;
  }

  3. How to take last x length of "..xyz".

      string
      last_x_len(int x)
  {

      // first let's create zyxw... of length x and then we will reverse it

      string ans = "";

      for (int i = 0; i < x; i++)
      {

          ans.push_back('z' - i);
      }

      reverse(ans.begin(), ans.end());

      return ans;
  }

  Using all these functions we can easily calculate the answer.